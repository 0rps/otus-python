From 6e2801c275da0d831050ff63118f3fd82c3fb917 Mon Sep 17 00:00:00 2001
From: MogilnikovAB <tuxrps@gmail.com>
Date: Fri, 8 Jun 2018 15:39:54 +0300
Subject: [PATCH] [add] LOAD_OTUS opcode

---
 Include/opcode.h        |  1 +
 Lib/opcode.py           |  2 ++
 Python/ceval.c          | 18 ++++++++++++++++++
 Python/opcode_targets.h |  2 +-
 Python/peephole.c       | 14 ++++++++++++++
 5 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/Include/opcode.h b/Include/opcode.h
index 9ed5487..f63c81c 100644
--- a/Include/opcode.h
+++ b/Include/opcode.h
@@ -159,6 +159,7 @@ extern "C" {
 #define SET_ADD         146
 #define MAP_ADD         147
 
+#define LOAD_OTUS       161
 
 enum cmp_op {PyCmp_LT=Py_LT, PyCmp_LE=Py_LE, PyCmp_EQ=Py_EQ, PyCmp_NE=Py_NE, PyCmp_GT=Py_GT, PyCmp_GE=Py_GE,
 	     PyCmp_IN, PyCmp_NOT_IN, PyCmp_IS, PyCmp_IS_NOT, PyCmp_EXC_MATCH, PyCmp_BAD};
diff --git a/Lib/opcode.py b/Lib/opcode.py
index e403365..51c8bc5 100644
--- a/Lib/opcode.py
+++ b/Lib/opcode.py
@@ -189,4 +189,6 @@ EXTENDED_ARG = 145
 def_op('SET_ADD', 146)
 def_op('MAP_ADD', 147)
 
+def_op('LOAD_OTUS', 161)
+
 del def_op, name_op, jrel_op, jabs_op
diff --git a/Python/ceval.c b/Python/ceval.c
index b55b4d6..32d1e7c 100644
--- a/Python/ceval.c
+++ b/Python/ceval.c
@@ -1642,6 +1642,24 @@ PyEval_EvalFrameEx(PyFrameObject *f, int throwflag)
             break;
         }
 
+        TARGET(LOAD_OTUS)
+        {
+            x = GETLOCAL(0);
+            if (x != NULL) {
+                Py_INCREF(x);
+                PUSH(x);
+            } else {
+                format_exc_check_arg(PyExc_UnboundLocalError,
+                    UNBOUNDLOCAL_ERROR_MSG,
+                    PyTuple_GetItem(co->co_varnames, oparg));
+            }
+
+            x = GETITEM(consts, oparg);
+            Py_INCREF(x);
+            PUSH(x);
+            FAST_DISPATCH();
+        }
+
         TARGET_NOARG(INPLACE_POWER)
         {
             w = POP();
diff --git a/Python/opcode_targets.h b/Python/opcode_targets.h
index 95eb127..a0aa8c9 100644
--- a/Python/opcode_targets.h
+++ b/Python/opcode_targets.h
@@ -160,7 +160,7 @@ static void *opcode_targets[256] = {
     &&_unknown_opcode,
     &&_unknown_opcode,
     &&_unknown_opcode,
-    &&_unknown_opcode,
+    &&TARGET_LOAD_OTUS,
     &&_unknown_opcode,
     &&_unknown_opcode,
     &&_unknown_opcode,
diff --git a/Python/peephole.c b/Python/peephole.c
index 11f6f88..58b8b0b 100644
--- a/Python/peephole.c
+++ b/Python/peephole.c
@@ -596,6 +596,20 @@ PyCode_Optimize(PyObject *code, PyObject* consts, PyObject *names,
         }
     }
 
+    if (codelen > 0) {
+        Py_ssize_t prevI = 0;
+        for (i = CODESIZE(codestr[0]); i < codelen ; i += CODESIZE(codestr[i])) {
+            if (codestr[i] == LOAD_CONST &&
+                    codestr[prevI] == LOAD_FAST &&
+                    GETARG(codestr, prevI) == 0)
+            {
+                codestr[i] = LOAD_OTUS;
+                memset(codestr + prevI, NOP, CODESIZE(codestr[prevI]));
+            }
+            prevI = i;
+        }
+    }
+
     /* Fixup linenotab */
     for (i=0, nops=0 ; i<codelen ; i += CODESIZE(codestr[i])) {
         addrmap[i] = i - nops;
-- 
2.10.2

